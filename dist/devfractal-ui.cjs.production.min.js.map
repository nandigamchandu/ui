{"version":3,"file":"devfractal-ui.cjs.production.min.js","sources":["../src/dynamic/Tabs.tsx","../src/routed/Breadcrumb.tsx","../src/routed/RoutedTabs.tsx","../src/dynamic/DropDown.tsx","../src/routed/DynamicBreadcrumb.tsx","../src/routed/Menu.tsx","../src/dynamic/Pagination.tsx","../src/routed/DynamicRouter.tsx"],"sourcesContent":["import {\n  classNamesHelper,\n  ControlledProps,\n  El,\n  Helpers,\n  Uncontrolled,\n  ValueChangeEvent,\n} from 'devfractal-ui-core'\nimport React from 'react'\nimport { debug } from 'technoidentity-utils'\n\nexport interface TabsChangeEvent extends ValueChangeEvent<string> {}\n\ntype TabsSize = 'small' | 'medium' | 'large'\n\ntype TabsAlignment = 'centered' | 'right'\n\ntype TabsStyle = 'boxed' | 'toggle' | 'toggle-rounded'\n\nexport interface TabsItemProps\n  extends React.LiHTMLAttributes<HTMLLIElement>,\n    Helpers {\n  readonly value?: string\n}\n\ninterface TabsItemInternalProps extends TabsItemProps {\n  readonly _name?: string\n  readonly value: string\n  readonly _active?: boolean\n  _setSelectedTab?(event: TabsChangeEvent): void\n}\n\nexport const TabsItem: React.FC<TabsItemProps> = args => {\n  const {\n    value,\n    _name,\n    _active,\n    _setSelectedTab,\n    children,\n    ...props\n  } = args as TabsItemInternalProps\n\n  return (\n    <El\n      as=\"li\"\n      {...props}\n      className={classNamesHelper(props, { 'is-active': _active })}\n    >\n      <a\n        href=\"#!\"\n        onClick={() => {\n          if (_setSelectedTab) {\n            _setSelectedTab({ name, value })\n          }\n        }}\n      >\n        {children}\n      </a>\n    </El>\n  )\n}\n\ninterface TabsViewProps\n  extends Omit<\n      React.HTMLAttributes<HTMLDivElement>,\n      'onChange' | 'name' | 'value'\n    >,\n    ControlledProps<string>,\n    Helpers {\n  readonly size?: TabsSize\n  readonly alignment?: TabsAlignment\n  readonly fullWidth?: boolean\n  readonly tabsStyle?: TabsStyle\n\n  onChange?(evt: TabsChangeEvent): void\n}\n\nconst TabsView: React.FC<Omit<TabsViewProps, 'defaultValue'>> = ({\n  size,\n  alignment,\n  fullWidth,\n  tabsStyle,\n  name,\n  value,\n  onChange,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'tabs', {\n    [`is-${size}`]: size,\n    [`is-${alignment}`]: alignment,\n    'is-toggle': tabsStyle === 'toggle' || tabsStyle === 'toggle-rounded',\n    [`is-${tabsStyle}`]: tabsStyle,\n    'is-fullwidth': fullWidth,\n  })\n\n  const selected: string =\n    value ||\n    ((children &&\n      ((children as unknown) as React.ReactElement[][0]) &&\n      ((children as unknown) as React.ReactElement[][0]).props.value) ||\n      '0')\n  return (\n    <El {...props} className={classes}>\n      <ul>\n        {React.Children.map(children, (child: any, i: number) => {\n          debug(\n            child.type.displayName === 'TabsItem',\n            \"Every child to 'Tabs' must be 'TabsItem'\",\n          )\n\n          const value: string = child.props.value || i.toString()\n          return React.cloneElement(child, {\n            _name: name,\n            value,\n            _active: selected === value,\n            _setSelectedTab: ({ value }: TabsChangeEvent) =>\n              onChange && onChange({ name, value }),\n          })\n        })}\n      </ul>\n    </El>\n  )\n}\n\nexport interface TabsProps extends TabsViewProps {\n  readonly defaultValue?: string\n}\n\nexport const Tabs: React.FC<TabsProps> = props => (\n  <Uncontrolled {...props} component={TabsView} />\n)\n","import { useRouter } from 'devfractal-router'\nimport { classNamesHelper, El, Helpers } from 'devfractal-ui-core'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { chop } from 'technoidentity-utils'\n\ntype BreadcrumbSize = 'small' | 'medium' | 'large'\n\ntype BreadcrumbAlignment = 'centered' | 'right'\n\ntype BreadcrumbSeparator = 'arrow' | 'bullet' | 'dot' | 'succeeds'\n\nexport interface BreadcrumbItemProps\n  extends React.LiHTMLAttributes<HTMLLIElement>,\n    Helpers {\n  // Used by parent to create href\n  readonly value?: string\n  // User could directly pass active, if not, this item will be active if href == current url\n  readonly active?: boolean\n  // Pass either 'value' or 'href', 'href' can be constructed from 'value'\n  readonly href?: string\n}\n\nexport const BreadcrumbItem: React.FC<BreadcrumbItemProps> = args => {\n  const { active, href, children, ...props } = args\n  const { location } = useRouter()\n  return (\n    <El\n      as=\"li\"\n      {...props}\n      className={classNamesHelper(props, {\n        'is-active': active || (href && chop(href)) === chop(location.pathname),\n      })}\n    >\n      {<NavLink to={href || '#'}>{children}</NavLink>}\n    </El>\n  )\n}\n\nexport interface BreadcrumbProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {\n  readonly size?: BreadcrumbSize\n  readonly alignment?: BreadcrumbAlignment\n  readonly baseURL?: string\n  readonly separator?: BreadcrumbSeparator\n}\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n  alignment,\n  size,\n  separator,\n  baseURL,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'breadcrumb', {\n    [`is-${alignment}`]: alignment,\n    [`is-${size}`]: size,\n    [`has-${separator}-separator`]: separator,\n  })\n\n  return (\n    <El as=\"nav\" {...props} className={classes}>\n      <ul>\n        {React.Children.map(children, (child: any) =>\n          React.cloneElement(\n            child,\n            baseURL ? { href: `${chop(baseURL)}/${child.props.value}` } : {},\n          ),\n        )}\n      </ul>\n    </El>\n  )\n}\n","import { useRouter } from 'devfractal-router'\nimport { classNamesHelper, El, Helpers } from 'devfractal-ui-core'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { chop, extractSegment } from 'technoidentity-utils'\n\ninterface RoutedTabsContext {\n  readonly baseURL?: string\n  readonly separator?: string\n  readonly currentLocation?: string\n}\n\nconst RoutedTabsContext: React.Context<RoutedTabsContext> = React.createContext<\n  RoutedTabsContext\n>({})\n\ntype RoutedTabsSize = 'small' | 'medium' | 'large'\n\ntype RoutedTabsAlignment = 'centered' | 'right'\n\ntype RoutedTabsStyle = 'boxed' | 'toggle' | 'toggle-rounded'\n\nexport interface RoutedTabsItemProps\n  extends React.LiHTMLAttributes<HTMLLIElement>,\n    Helpers {\n  readonly value: string\n}\n\nfunction matches(\n  tab: string,\n  separator?: string,\n  baseURL?: string,\n  currentLocation?: string,\n): boolean {\n  if (!(baseURL && currentLocation && separator)) {\n    return false\n  }\n  const base: string = chop(baseURL, separator)\n  const current: string = chop(currentLocation, separator)\n\n  return (\n    current.indexOf(base) >= 0 &&\n    tab === extractSegment(current, base.length + separator.length, separator)\n  )\n}\n\nexport const RoutedTabsItem: React.FC<RoutedTabsItemProps> = ({\n  value,\n  children,\n  ...props\n}) => (\n  <RoutedTabsContext.Consumer>\n    {({ baseURL, separator, currentLocation }) => (\n      <El\n        as=\"li\"\n        {...props}\n        className={classNamesHelper(props, {\n          'is-active': matches(value, separator, baseURL, currentLocation),\n        })}\n      >\n        <NavLink to={baseURL ? `${baseURL}${separator}${value}` : ''}>\n          {children}\n        </NavLink>\n      </El>\n    )}\n  </RoutedTabsContext.Consumer>\n)\n\nexport interface RoutedTabsProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Helpers {\n  readonly size?: RoutedTabsSize\n  readonly alignment?: RoutedTabsAlignment\n  readonly fullWidth?: boolean\n  readonly tabsStyle?: RoutedTabsStyle\n  readonly to?: string\n  readonly urlSeparator?: string\n}\n\nexport const RoutedTabs: React.FC<RoutedTabsProps> = args => {\n  const {\n    to,\n    urlSeparator = '/',\n    size,\n    alignment,\n    fullWidth,\n    tabsStyle,\n    children,\n    ...props\n  } = args\n\n  const classes: string = classNamesHelper(props, 'tabs', {\n    [`is-${size}`]: size,\n    [`is-${alignment}`]: alignment,\n    [`is-${tabsStyle}`]: tabsStyle,\n    'is-fullwidth': fullWidth,\n  })\n  const { location } = useRouter()\n  return (\n    <RoutedTabsContext.Provider\n      value={{\n        baseURL: to,\n        separator: urlSeparator,\n        currentLocation: location.pathname,\n      }}\n    >\n      <El {...props} className={classes}>\n        <ul>{children}</ul>\n      </El>\n    </RoutedTabsContext.Provider>\n  )\n}\n","import { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons'\nimport { Button, classNamesHelper, El, Helpers, Icon } from 'devfractal-ui-core'\nimport React from 'react'\n\ntype DropDownModifier = 'hoverable' | 'active'\n\nexport interface DropDownProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Helpers {\n  readonly label?: string\n\n  /**\n   * when should be the Dropdown to be shown Up\n   */\n  readonly modifier?: DropDownModifier\n  /**\n   * To have a right-aligned dropdown\n   */\n  readonly rightAligned?: boolean\n  /**\n   * To have a dropdown menu that appears above the dropdown button\n   */\n  readonly dropUp?: boolean\n}\n\nexport const DropDown: React.FC<DropDownProps> = ({\n  label,\n  modifier,\n  rightAligned,\n  dropUp,\n  children,\n  ...props\n}) => {\n  const [active, setActive] = React.useState(modifier === 'active')\n  const classes: string = classNamesHelper(props, 'dropdown', {\n    [`is-hoverable`]: modifier === 'hoverable',\n    [`is-active`]: modifier !== 'hoverable' && active,\n    'is-right': rightAligned,\n    'is-up': dropUp,\n  })\n  return (\n    <El {...props} className={classes}>\n      <El className=\"dropdown-trigger\">\n        <Button onClick={() => setActive(!active)}>\n          <span>{label}</span>\n          <Icon icon={dropUp ? faAngleUp : faAngleDown} />\n        </Button>\n      </El>\n      <El className=\"dropdown-menu\" role=\"menu\">\n        <El\n          {...props}\n          className=\"dropdown-content\"\n          onClick={() => setActive(false)}\n        >\n          {children}\n        </El>\n      </El>\n    </El>\n  )\n}\n\ntype DropDownItemTag = 'div' | 'a'\n\nexport interface DropDownItemProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {\n  readonly active?: boolean\n  readonly as?: DropDownItemTag\n}\n\nexport const DropDownItem: React.FC<DropDownItemProps> = ({\n  active,\n  as,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'dropdown-item', {\n    'is-active': active,\n  })\n  return (\n    <El as={as} {...props} className={classes}>\n      {children}\n    </El>\n  )\n}\n\nexport interface DropDownDividerProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {}\n\nexport const DropDownDivider: React.FC<DropDownDividerProps> = ({\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'dropdown-divider')\n  return <El as=\"hr\" {...props} className={classes} />\n}\n","import { useRouter } from 'devfractal-router'\nimport { Null } from 'devfractal-ui-core'\nimport React from 'react'\nimport { capitalizeAll, chop } from 'technoidentity-utils'\nimport { Breadcrumb, BreadcrumbItem } from './Breadcrumb'\n\nexport const DynamicBreadcrumb: React.FC = () => {\n  const { location } = useRouter()\n  const segments: string[] = chop(location.pathname).split('/')\n\n  if (segments.length <= 1) {\n    return <Null />\n  }\n\n  const segmentsPaths: Array<[string, string]> = segments.map<[string, string]>(\n    (s, i) =>\n      s === '' ? ['home', '/'] : [s, `${segments.slice(0, i + 1).join('/')}`],\n  )\n\n  return (\n    <Breadcrumb>\n      {segmentsPaths.map(([s, p]) => (\n        <BreadcrumbItem key={p} href={p}>\n          {capitalizeAll(s, '-')}\n        </BreadcrumbItem>\n      ))}\n    </Breadcrumb>\n  )\n}\n","import { useRouter } from 'devfractal-router'\nimport { classNamesHelper, El, Helpers } from 'devfractal-ui-core'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { chop } from 'technoidentity-utils'\n\ntype MenuSize = 'small' | 'medium' | 'large'\n\nexport interface MenuProps extends React.HTMLAttributes<HTMLElement>, Helpers {\n  /**\n   * To resize the Menu Content\n   */\n  readonly size?: MenuSize\n  readonly baseURL?: string\n}\n\nexport const Menu: React.FC<MenuProps> = ({\n  size,\n  baseURL,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'menu', {\n    [`is-${size}`]: size,\n  })\n  return (\n    <El as=\"aside\" {...props} className={classes}>\n      <ul>\n        {React.Children.map(children, (child: any) =>\n          React.cloneElement(\n            child,\n            baseURL ? { href: `${chop(baseURL)}/${child.props.value}` } : {},\n          ),\n        )}\n      </ul>\n    </El>\n  )\n}\n\nexport interface MenuLabelProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {}\n\nexport const MenuLabel: React.FC<MenuLabelProps> = ({ children, ...props }) => {\n  const classes: string = classNamesHelper(props, 'menu-label')\n  return (\n    <El as=\"p\" {...props} className={classes}>\n      {children}\n    </El>\n  )\n}\n\nexport interface MenuListProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {}\n\nexport const MenuList: React.FC<MenuListProps> = ({ children, ...props }) => {\n  const classes: string = classNamesHelper(props, 'menu-list')\n  return (\n    <El as=\"ul\" {...props} className={classes}>\n      {children}\n    </El>\n  )\n}\n\nexport interface MenuItemProps\n  extends React.LiHTMLAttributes<HTMLLIElement>,\n    Helpers {\n  readonly href?: string\n  readonly active?: boolean\n  readonly value?: string\n}\n\nexport const MenuItem: React.FC<MenuItemProps> = ({\n  href,\n  active,\n  children,\n  ...props\n}) => {\n  const { location } = useRouter()\n\n  const classes: string = classNamesHelper(props, {\n    'is-active':\n      active || (href && chop(location.pathname).startsWith(chop(href))),\n  })\n\n  return (\n    <El as=\"li\" {...props}>\n      {\n        <Link to={href || '#'} className={classes}>\n          {children}\n        </Link>\n      }\n    </El>\n  )\n}\n","import { classNamesHelper, El, Helpers } from 'devfractal-ui-core'\nimport React from 'react'\n\nexport interface PaginationProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {\n  /**\n   * To have rounded pagination items\n   */\n  readonly rounded?: boolean\n  /**\n   * To Resize the Pagination elements\n   */\n  readonly size?: 'small' | 'medium' | 'large'\n  /**\n   * To change the order of the elements in PaginationList\n   */\n  readonly alignment?: 'centered' | 'right'\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  rounded,\n  size,\n  alignment,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'pagination', {\n    [`is-${alignment}`]: alignment,\n    [`is-${size}`]: size,\n    'is-rounded': rounded,\n  })\n  return (\n    <El\n      as=\"nav\"\n      {...props}\n      className={classes}\n      role=\"navigation\"\n      aria-label=\"pagination\"\n    >\n      {children}\n    </El>\n  )\n}\n\nexport interface PaginationLinkProps\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\n    Helpers {\n  /**\n   * To Specify that the page is the current one\n   */\n  readonly current?: boolean\n  /**\n   * You can disable some links if they are not active, or change the amount of page numbers available.\n   */\n  readonly disabled?: boolean\n}\n\nexport const PaginationLink: React.FC<PaginationLinkProps> = ({\n  current,\n  disabled,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'pagination-link', {\n    'is-current': current,\n  })\n  return (\n    <li>\n      <El as=\"a\" {...props} disabled={disabled} className={classes}>\n        {children}\n      </El>\n    </li>\n  )\n}\n\nexport interface PaginationListProps\n  extends React.HTMLAttributes<HTMLElement>,\n    Helpers {}\n\nexport const PaginationList: React.FC<PaginationListProps> = ({\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'pagination-list')\n  return (\n    <El as=\"ul\" {...props} className={classes}>\n      {children}\n    </El>\n  )\n}\nexport interface PaginationEllipsisProps\n  extends React.HTMLAttributes<HTMLSpanElement>,\n    Helpers {}\n\nexport const PaginationEllipsis: React.FC<PaginationEllipsisProps> = ({\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'pagination-ellipsis')\n  return (\n    <li>\n      <span {...props} className={classes}>\n        &hellip;\n      </span>\n    </li>\n  )\n}\nexport interface PaginationPreviousProps\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\n    Helpers {\n  /**\n   * To disable some links if they are not active\n   */\n  readonly disabled?: boolean\n}\n\nexport const PaginationPrevious: React.FC<PaginationPreviousProps> = ({\n  disabled,\n  children,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(\n    props,\n\n    'pagination-previous',\n  )\n  return (\n    <El as=\"a\" {...props} disabled={disabled} className={classes}>\n      {children}\n    </El>\n  )\n}\n\nexport interface PaginationNextProps\n  extends React.AnchorHTMLAttributes<HTMLAnchorElement>,\n    Helpers {\n  /**\n   * To disable some links if they are not active\n   */\n  readonly disabled?: boolean\n}\n\nexport const PaginationNext: React.FC<PaginationNextProps> = ({\n  children,\n  disabled,\n  ...props\n}) => {\n  const classes: string = classNamesHelper(props, 'pagination-next')\n  return (\n    <El as=\"a\" {...props} disabled={disabled} className={classes}>\n      {children}\n    </El>\n  )\n}\n","import { Route, SimpleRedirect } from 'devfractal-router'\nimport React from 'react'\nimport { capitalizeAll, toLower } from 'technoidentity-utils'\nimport { RoutedTabs, RoutedTabsItem } from './RoutedTabs'\n\nexport interface DynamicRouterResult {\n  readonly Routes: React.FC\n  readonly Links: React.FC\n}\n\n// tslint:disable typedef\nexport function dynamicRouter<T extends {}>(\n  components: T,\n  baseUrl: string,\n): DynamicRouterResult {\n  // tslint:disable-next-line: ban-ts-ignore\n  // @ts-ignore\n  const { __esModule, ...cs } = components as any\n  const keys = Object.keys(cs)\n  const urls = keys.map(k => toLower(k, '-'))\n  const labels = keys.map(k => capitalizeAll(toLower(k, ' ')))\n\n  const Routes: React.FC = () => (\n    <>\n      {urls.length > 0 && (\n        <SimpleRedirect exact from={baseUrl} to={`${baseUrl}/${urls[0]}`} />\n      )}\n\n      {urls.map((url, i) => {\n        const path = `${baseUrl}/${url}`\n        return <Route exact key={url} path={path} component={cs[keys[i]]} />\n      })}\n    </>\n  )\n\n  const Links: React.FC = () => {\n    return (\n      <RoutedTabs to={`${baseUrl}`} size=\"medium\">\n        {urls.map((url, i) => (\n          <RoutedTabsItem key={url} value={url}>\n            {labels[i]}\n          </RoutedTabsItem>\n        ))}\n      </RoutedTabs>\n    )\n  }\n\n  return { Links, Routes }\n}\n"],"names":["TabsView","size","alignment","fullWidth","tabsStyle","name","value","onChange","children","props","classes","classNamesHelper","selected","React","El","className","Children","map","child","i","debug","type","displayName","toString","cloneElement","_name","_active","_setSelectedTab","BreadcrumbItem","args","active","href","location","useRouter","as","chop","pathname","NavLink","to","Breadcrumb","separator","baseURL","RoutedTabsContext","createContext","matches","tab","currentLocation","base","current","indexOf","extractSegment","length","RoutedTabsItem","Consumer","RoutedTabs","urlSeparator","Provider","label","modifier","rightAligned","dropUp","useState","setActive","Button","onClick","Icon","icon","faAngleUp","faAngleDown","role","segments","split","Null","segmentsPaths","s","slice","join","p","key","capitalizeAll","startsWith","Link","rounded","disabled","Uncontrolled","component","components","baseUrl","cs","keys","Object","urls","k","toLower","labels","Links","url","Routes","SimpleRedirect","exact","from","Route","path"],"mappings":"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"}